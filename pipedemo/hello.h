

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.01.0622 */
/* at Tue Jan 19 11:14:07 2038
 */
/* Compiler settings for hello.idl:
    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622 
    protocol : dce , ms_ext, c_ext, oldnames, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */


#ifndef __hello_h__
#define __hello_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __pipedemo_INTERFACE_DEFINED__
#define __pipedemo_INTERFACE_DEFINED__

/* interface pipedemo */
/* [implicit_handle][unique][version][uuid] */ 

typedef struct pipe_LONG_PIPE
    {
    void (__RPC_USER * pull) (
        char * state,
        long * buf,
        unsigned long esize,
        unsigned long * ecount );
    void (__RPC_USER * push) (
        char * state,
        long * buf,
        unsigned long ecount );
    void (__RPC_USER * alloc) (
        char * state,
        unsigned long bsize,
        long * * buf,
        unsigned long * bcount );
    char * state;
    } 	LONG_PIPE;

void HelloProc( 
    /* [in] */ handle_t h1,
    /* [string][in] */ unsigned char *pszString);

void Shutdown( 
    /* [in] */ handle_t h1);

void InPipe( 
    /* [in] */ LONG_PIPE pipe_data);

void OutPipe( 
    /* [out] */ LONG_PIPE *pipe_data);

void InOutPipe( 
    /* [out][in] */ LONG_PIPE pipe_data);


extern handle_t pipedemo_IfHandle;


extern RPC_IF_HANDLE pipedemo_ClientIfHandle;
extern RPC_IF_HANDLE pipedemo_ServerIfHandle;
#endif /* __pipedemo_INTERFACE_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif

